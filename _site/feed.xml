<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-22T10:45:09+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">LeiosOS</title><subtitle>This is a site for James Schloss, physics PhD student at &lt;a href=&quot;http://www.oist.jp/&quot; target=&quot;_blank&quot;&gt;OIST&lt;/a&gt;. We solve silly questions with code.</subtitle><author><name>James Schloss</name></author><entry><title type="html">Batman Integration</title><link href="http://localhost:4000/Batman_Montecarlo" rel="alternate" type="text/html" title="Batman Integration" /><published>2016-07-10T00:00:00+09:00</published><updated>2016-07-10T00:00:00+09:00</updated><id>http://localhost:4000/Batman</id><content type="html" xml:base="http://localhost:4000/Batman_Montecarlo">&lt;div class=&quot;youtube-16-9&quot;&gt;
  &lt;iframe height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;https://www.youtube.com/embed/AyBNnkYrSWY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#bg&quot;&gt;Background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#BatmanCurve&quot;&gt;Integrating the Batman Curve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;bg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;The Monte Carlo algorithm is used all over the world for a number of things.
In physics, it is often used to find integrals of poorly-behaved functions, and it works incredibly well for that!
Let’s take a minute to describe how the Monte Carlo algorithm works and why it’s cool.&lt;/p&gt;

&lt;p&gt;Firstly, let’s define what an integral is: it is a fancy way to find an area.
For now, that’s all we need to know. 
Sure, there are plenty of people who make it way, way more complicated than that, but the simpler the definition, the simpler the algorithm.
I like simple algorithms.&lt;/p&gt;

&lt;p&gt;So, if an integral is just an area, what do we need to do to find that area?
Well, use geometry!
If we have a box, the area of the box is obviously its &lt;script type=&quot;math/tex&quot;&gt;width \times height&lt;/script&gt;. 
If we have a triangle, the area is simply &lt;script type=&quot;math/tex&quot;&gt;\frac{1}{2} width \times height&lt;/script&gt;. 
Generally, the more complicated the shape, the harder it is to find the shape’s area from geometry.&lt;/p&gt;

&lt;p&gt;That said, we don’t really need to find the shape of the object we are integrating to find it’s area.
Instead, we can take a simple object, find the area of that and then embed a more complicated object inside of it. 
If we can find the ratio of how filled the simple object is by the more complicated object inside of it, then we can find the area of the complicated object like so:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Ratio \times Area\ of\ simple\ object&lt;/script&gt;

&lt;p&gt;Of course, this will only work if the simple object is larger than the more complicated one, such that the complicated object falls perfectly inside of the larger object’s boundaries.&lt;/p&gt;

&lt;p&gt;Let’s take the example of a circle and square:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Batman/square_circle.png&quot; alt=&quot;Circle inside of Square&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, the area of the circle is &lt;script type=&quot;math/tex&quot;&gt;\pi \times Radius^2&lt;/script&gt; and the area of the square is &lt;script type=&quot;math/tex&quot;&gt;4 * Radius^2&lt;/script&gt;. 
This means that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Ratio = \frac{\pi \times Radius^2}{4 * Radius^2} = \frac{\pi}{4}&lt;/script&gt;

&lt;p&gt;From here, it’s obvious that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Ratio \times Area\ of\ Square = \frac{\pi}{4} \times 4 * Radius^2 = \pi \times Radius^2&lt;/script&gt;

&lt;p&gt;Or the area of the circle.&lt;/p&gt;

&lt;p&gt;But now we have a question: How do we find that ratio for arbitrary shapes?
Well, Monte Carlo’s solution to this is &lt;em&gt;Random Sampling&lt;/em&gt;.
If we take a bunch of points in the simple region with the more complicated shape inside, then&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Ratio = \frac{Count\ in\ Complicated\ Shape}{Count\ in\ Box}&lt;/script&gt;

&lt;p&gt;And that’s pretty cool. 
It means that if we take a whole bunch of points, we should be able to find the ratio and integrate any arbitrarily shaped / size object!
For the example above:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Batman/MonteCarlo.gif&quot; alt=&quot;gif of simple Monte Carlo algorithm&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we see that the ratio is pretty darn close to &lt;script type=&quot;math/tex&quot;&gt;\frac{\pi}{4} = 0.785398&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;The most difficult part of the Monte Carlo algorithm is finding the appropriate evaluation function.
For example: How did we know whether a random point on the plane was within the circle above?
Well, we simply had to plug it into a function that checked to see whether a line drawn from the origin to the x-y location of the random point was greater or less than a provided radius for the circle.
The code basically looks like:&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Function to check whether point is in circle or not
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That said, the true power of the Monte Carlo algorithm comes from the fact that we may now integrate somewhat arbitrary functions, for a good example of this, see the next section!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;BatmanCurve&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;integrating-the-batman-curve&quot;&gt;Integrating the Batman Curve&lt;/h2&gt;

&lt;p&gt;Now here’s the thing: Monte Carlo doesn’t need to use boxes and it doesn’t need to integrate obvious shapes. 
Let’s talk about what you need to do to integrate non-obvious functions with one of our favorite superheroes: Batman!&lt;/p&gt;

&lt;p&gt;To be clear: the Batman Curve was not created by me.
I found it on &lt;a href=&quot;https://www.reddit.com/&quot;&gt;reddit&lt;/a&gt; and found all the information I needed &lt;a href=&quot;http://math.stackexchange.com/questions/54506/is-this-batman-equation-for-real&quot;&gt;on this math stack exchange post&lt;/a&gt;.
In addition, &lt;a href=&quot;http://mathworld.wolfram.com/BatmanCurve.html&quot;&gt;WolframMathWorld had a decent page with the integral on it&lt;/a&gt;.
Because the Batman Curve is difficult to integrate (though not impossible by any means!) and it has a clear analytically-defined integral to compare our Monte Carlo integration algorithm against, it was the perfect choice to test some things out.&lt;/p&gt;

&lt;p&gt;First things first, for this integral, we were not using a standard box as described above. Instead we were using an oval. 
Honestly, the objects don’t matter, but I thought it was worthwhile to point out that the area of the oval is simple &lt;script type=&quot;math/tex&quot;&gt;\pi \times Shortest\ distance \times Longest\ distance&lt;/script&gt;, so &lt;script type=&quot;math/tex&quot;&gt;\pi \times Radius^2&lt;/script&gt; with the shortest and longest distances to the oval from the origin as the radii.&lt;/p&gt;

&lt;p&gt;The batman curve was a little tricky, we had to split it into the following equations (&lt;a href=&quot;http://math.stackexchange.com/questions/54506/is-this-batman-equation-for-real&quot;&gt;image created by Jack in the previously mentioned math stack exchange post&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/EHNR8.png&quot; alt=&quot;Image of equations, found here: http://math.stackexchange.com/questions/54506/is-this-batman-equation-for-real&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which, when plotted provide:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Batman/simple_bat.png&quot; alt=&quot;Batman Curve&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then we had to write a simple function to determine if a point inside the oval was within the Batman Curve or not. 
To do this, we divided the curve into the following sections:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Batman/batblocks.png&quot; alt=&quot;Batman Curve with blocks&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here is a visualization of the output:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Batman/batman.gif&quot; alt=&quot;gif of Batman Monte Carlo&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is the function (Nothing special, really):&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// Function to check if we are in batman function for monte_carlo
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_batman&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ori&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Determine x and y locations
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ori&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ori&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing left upper wing
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing left shoulder
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.710523708715754&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
                     &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.355261854357877&lt;/span&gt;
                     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing exterior left ear
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing interior left ear
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing top of head
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// Drawing interior right ear
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Drawing exterior right ear
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// Drawing right shoulder
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.710523708715754&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
                     &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.355261854357877&lt;/span&gt;
                     &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        
        &lt;span class=&quot;c1&quot;&gt;// Drawing right upper wing
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;// Drawing bottom left wing
&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;// Drawing bottom wing
&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
             &lt;span class=&quot;c1&quot;&gt;//return false;
&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
                       &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.09137221374655434&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                      &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
                             &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;// Drawing bottom right wing
&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
             &lt;span class=&quot;c1&quot;&gt;//return true;
&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leios/simuleios/blob/master/visualization/monte_carlo/monte_carlo_vis.cpp&quot;&gt;The full code is available here&lt;/a&gt;.
 Note that it is a little messy and long.
 That’s because the we used &lt;a href=&quot;https://www.cairographics.org/&quot;&gt;Cairo&lt;/a&gt; to do the visualization, which added a bunch of extra lines to the code.&lt;/p&gt;

&lt;p&gt;Overall, this was a pretty fun side-project!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>James Schloss</name></author><summary type="html"></summary></entry><entry><title type="html">Invisible Lens</title><link href="http://localhost:4000/invlens" rel="alternate" type="text/html" title="Invisible Lens" /><published>2015-11-20T00:00:00+09:00</published><updated>2015-11-20T00:00:00+09:00</updated><id>http://localhost:4000/InvLens</id><content type="html" xml:base="http://localhost:4000/invlens">&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#bg&quot;&gt;Background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;Time-dependent raytracing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#FDTD&quot;&gt;Finite-Difference Time Domain (FDTD)&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#TFSF&quot;&gt;Total-Field Scattered-Field (TFSF) Boundaries&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ABC&quot;&gt;Absorbing Boundary Conditions (ABC)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;bg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;So, light is an intertesting thing. It’s absolutely fundamental to our lives in every possible way. Even so… understanding the true beauty of light took millenia, with some of the brightest human minds devoted to understanding it. Looking at light, though, it is not immediately obvious why.&lt;/p&gt;

&lt;p&gt;Let’s think about light, then. What is it? Well, it might be easier to describe something it is not: a shadow. In fact, any toddler can tell you that when light hits something, it leaves a shadow on the other side. This interaction between light, objects, and shadows led many scientists to believe that light acted as a line of particles, all chained together. This wasn’t inherently wrong, but it wasn’t completely right either. It turns out that light can also act as a wave. How? Well, to answer this question, we need to talk a little more about what light is in the first place.&lt;/p&gt;

&lt;p&gt;Light is something called an electromagnetic wave. What is that? Well, an electric field is the thing that causes like charges to repel and opposite charges to attract, and a magnetic field does the same thing except with magnets. These two fields follow particular equations known as Maxwell’s equations that can be written as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\nabla \cdot \vec{B} = 0&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\nabla \cdot \vec{E} = \frac{\rho}{\epsilon _0}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\nabla \times \vec{B} = \mu _0 \vec{J} + \mu _0 \epsilon _0 \frac{\partial \vec{E}}{\partial t}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\nabla \cdot \vec{E} = -\frac{\partial \vec{B}}{\partial t}&lt;/script&gt;

&lt;p&gt;What do these mean? Well,  that depends on who you ask and what we are talking a
bout, but for the most part, the mean the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;There are no Magnetic monopoles&lt;/li&gt;
  &lt;li&gt;[Gauss’s Law] Charge is conserved unless something else acts on the system&lt;/li&gt;
  &lt;li&gt;[Amphere’s Law] The magnetic field is related to the change in electric field over time&lt;/li&gt;
  &lt;li&gt;[Faraday’s Law] The electric field is related to the change in magnetic field over time&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For our purposes, we only care about the last two: Amphere’s Law and Faraday’s Law. These relate the electric and magnetic fields as they change in time. Basically, they mean that whenever the electric field changes in one direction, the magnetic field must change in another direction, and any time the magnetic field changes in some direction, the electric field must change in another direction. Because of these laws, the electric and magnetic fields must always be perpendicular.&lt;/p&gt;

&lt;p&gt;In the case of light, this means that the electric field may move up and down, while the magnetic field moves in and out and the light itself moves forward. In this way, light is a truly 3-dimensional object.&lt;/p&gt;

&lt;p&gt;But how does this related to the whole ray vs wave argument? Well, the electromagnetic wave that is light moves forward, but is made of two diffferent waveforms. This means that when we look at light from a distance, it acts as a ray. We don’t even notice the fact that it is a wave hidden in disguise; however, if we start looking closer… all of a sudden we realize that there are some wave-like properties to deal with like diffraction. Now, to be clear: these wave-like phenomenon are only noticeable when the distance in which we are interacting with the light is comparable to the wavelength of the light.&lt;/p&gt;

&lt;p&gt;I believe this is a decent enough introduction to light, so let’s talk about an abject that light often interacts with: lenses.&lt;/p&gt;

&lt;p&gt;When we consider light as a ray, it interacts with a lens via Snell’s Law:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;n _1 \sin (\theta _1)  = n _2 \sin (\theta _2)&lt;/script&gt;

&lt;p&gt;This equation basically relates the angle of a wave entering a lens with the angle of a wave within the lens, itself. In this case, &lt;em&gt;n&lt;/em&gt; is something known as an “Index of Refraction,” which is basically a ratio of how dens a medium is when compared to the outside air. If we draw a line perpendicular to the surface of the lens, and assume that the lens is denser than the air outside of it, then the ray will bend towards that line as it enters the lens. If it leaves the lens, it will bend back to the angle it was before.&lt;/p&gt;

&lt;p&gt;Now here’s an interesting thought: what if the index of refraction inside the lens was not constant, but instead changed as the light moved through it? Well, in principle the ray would be entering consecutive layers of new lenses. In this way, we could arbitrarily force the ray of light to draw structures for us… or we could do something else.&lt;/p&gt;

&lt;p&gt;We could make the lens, itself, invisible!&lt;/p&gt;

&lt;p&gt;How? Well, all we need to do is match the rays of light on one side of the lens with the rays of light on the other side of the lens. In this way, an observer would not even notice a difference when looking through the lens. Well, that’s not completely true. An astute observer might recognize a small time delay, but why would that matter? I mean, the delay would be related to the time it took for light to weave it’s way through the lens and light is the fastest thing in the known universe! Surely the time delay would be negligible!&lt;/p&gt;

&lt;p&gt;Well, yes. When we consider light to be a ray, it is totally negligible; however, if we consider light to be a wave… we now need to make sure that the time delay perfectly aligns with the light such that the wavefronts do not look disturbed.&lt;/p&gt;

&lt;p&gt;In order to really do this system justice, we need to simulate it twice, once with time-dependent ray-tracing and another with one of the most useful physics algorithms out there: Finite-Difference Time Domain (FDTD). That’s exactly what we are going to do!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;code&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;time-dependent-ray-tracing&quot;&gt;Time-dependent Ray Tracing&lt;/h2&gt;

&lt;p&gt;Remember from our discussion before, the ray approximation of light is only valid when the distance in which we are interacting with the light is much, much greater than the wavelength of the light. In math-speak, this is:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\lambda \ll d&lt;/script&gt;

&lt;p&gt;MORE COMING SOON&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;FDTD&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;finite-difference-time-domain-fdtd&quot;&gt;Finite Difference Time Domain (FDTD)&lt;/h2&gt;
&lt;p&gt;The Finite Difference Time Domain (FDTD) method is one of the most useful computational methods in the field of electricity and magnetism (which is a pretty active field, if you know the right people). What is it? It’s basically a simulation of the Electric and Magnetic fields in a typical electromagnetic wave. How does it work? Well, that might be a little complicated to explain, so let’s start with something simple-ish: Maxwell’s Equations.&lt;/p&gt;

&lt;p&gt;Again, for FDTD simulations we only care about Amphere’s Law and Faraday’s Law because we are trying to find a way to relate the electric and magnetic field in a wave. I mean, for this purpose, who cares if charge is conserved or if there are no such things as magnetic monopoles?&lt;/p&gt;

&lt;p&gt;From this information, it would look like we have equations and we know what electromagnetic waves should look like, so that should mean that we are set to start our simulation, right?&lt;/p&gt;

&lt;p&gt;Well… Not exactly. Computers do not think like we do, so we need to discretize Maxwell’s Equations. What does that mean? Well, it means that we need to take a continuous system (nature) and split it into a bunch of little blocks that a computer can understand.&lt;/p&gt;

&lt;p&gt;But let’s take a minute to think about what we know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The electric field is dependent on the variance of the magnetic field with time&lt;/li&gt;
  &lt;li&gt;the magnetic field is dependent on the variance of the electric field with time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s constrain ourselves to 1 dimension for now and a row of points. Each point will correspond to the electric field at some point in space. With only this one line, we could enforce an electric field distribution by setting all the points to appropriate values and waving our hands in the air like we just don’t care; however, this distribution would be stuck, unmoving for all eternity. How do we get it to move?&lt;/p&gt;

&lt;p&gt;Well, we introduce a string of magnetic field points exactly halfway between each electric field point. In this case, though, we do not assign the magnetic field values. Instead, we allow the magnetic field to be calculated from the electric field – where each individual magnetic field point is related to the average of the two nearest electric field points.&lt;/p&gt;

&lt;p&gt;So now we have a bit of a situation. The magnetic field is going to change in the very next time step! This is super exciting because it means that the magnetic field is changing with time. What else happens when the magnetic field changes with time?&lt;/p&gt;

&lt;p&gt;Right! The electric field also changes! Of course, this is an endless cycle, because the moment the electric field changes, the magnetic field will also change. And then the electric field will change again!
In this way, we have simulated Maxwell’s equations in distritized time and space with an incredibly intuitive method.&lt;/p&gt;

&lt;p&gt;Now, I know what you are thinking, “Let’s just plug in this newfangled FDTD nonsense to our index of refraction profile and move on with our lives!” The truth is that life is not that simple.&lt;/p&gt;

&lt;p&gt;Just because we can simulate a 1 dimensional wave does not mean we can simulate a lens in 2 dimensions. We need to make a few modifications, some of which are easier than others:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Extend the code to 2 dimensions&lt;/li&gt;
  &lt;li&gt;Force the wave to move in 1 direction only&lt;/li&gt;
  &lt;li&gt;Stop the wave from moving at some point.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, all of these seem like they should be simple, right? In fact, the first one is. It’s just a matter of keepign track of your new 2-dimensional array. The latter two, though… they can be a little tricky. They require the introduction of two new devices: the &lt;a href=&quot;#TFSF&quot;&gt;total-field scattered-field boundary&lt;/a&gt; and &lt;a href=&quot;#ABC&quot;&gt;absorbing boundary conditions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;TFSF&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;total-field-scattered-field-tfsf-boundaries&quot;&gt;Total-Field Scattered-Field (TFSF) boundaries&lt;/h3&gt;

&lt;p&gt;What is a Total-Field Scattered-Field (TFSF) boundary? Well, I am glad you asked! It is a boundary that splits your electromagnetic wave into two parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Total field&lt;/li&gt;
  &lt;li&gt;Scattered Field&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s literally in the name. But what does this mean? It means that when we create a wave at some point, we can split the wave into two sections –  one that goes right and one that goes left. If we keep one of the sides from propagating, we have a TFSF bounday! This means that the wave is only moving in 1 direction!&lt;/p&gt;

&lt;p&gt;Why is that cool? Well, think about what we are doing right now. We are trying to simulate an invisible lens. How can we do that without having a wave that moves in a single direction: towards the lens.&lt;/p&gt;

&lt;p&gt;Now let’s talk about our ABC’s!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;ABC&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;absorbing-boundary-conditions-abc&quot;&gt;Absorbing Boundary Conditions (ABC)&lt;/h3&gt;

&lt;p&gt;So, we have a problem. When the wave hits the edge of a box, it bounces back. Why? Well, it’s still trying to solve Maxwell’s equations, right? This means that the magnetic field changes based on the electric field and the electric field changes based on the magnetic field. In this case, if the electric field gets stuck on a wall, our algorithm will just resolve Maxwell’s equations and send the wave back where it came from. This can lead to some interesting physics, but it might not be what you want all the time.&lt;/p&gt;

&lt;p&gt;Let’s say we want to pretend our wave is ongoing for all eternity. In this case, we need to do something to our very last elements in our row (or grid in 2 dimensions). What do we need to do? Well, we need to set up a little trap. Sure, we’ll allow the electric and magnetic field to move to the very last grid poing, but when they do, we do something nasty:&lt;/p&gt;

&lt;p&gt;We set the very last element to be the value of the second-to-last element (or the very first element to be the second).&lt;/p&gt;

&lt;p&gt;What does this mean? Well, it means that there is no longer a difference between the two electric field points, which means there is no magnetic field… and without a magnetic field, the electric field can no longer exist!&lt;/p&gt;

&lt;p&gt;This is, in essence, an ABC. Sure. It might not sound too menacing, but it can be depending on the rules you have layed out for yourself. For example, in 2 dimensions, this simple case of setting the two final elements equal to each other will not longer work because you could have the wave moving in a way that is not directly perpendicular to the edge. What a shame that would be. What do you do in that case? Well, that is exactly what we are trying to figure out right now!&lt;/p&gt;</content><author><name>James Schloss</name></author><summary type="html">Background Time-dependent raytracing Finite-Difference Time Domain (FDTD) Total-Field Scattered-Field (TFSF) Boundaries Absorbing Boundary Conditions (ABC)</summary></entry><entry><title type="html">Maxwell’s Demon</title><link href="http://localhost:4000/99MaxwellsDemon" rel="alternate" type="text/html" title="Maxwell's Demon" /><published>2015-11-01T00:00:00+09:00</published><updated>2015-11-01T00:00:00+09:00</updated><id>http://localhost:4000/MaxwellsDemon</id><content type="html" xml:base="http://localhost:4000/99MaxwellsDemon">&lt;div class=&quot;youtube-16-9&quot;&gt;
  &lt;iframe height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;https://www.youtube.com/embed/5niDIoptyIU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#bg&quot;&gt;Background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;About the code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;bg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;So. Let’s talk about time travel. I hate to break it to ya, but time travel is 
theoretically impossible. It’s not a matter of building or engineering a time
travelling device. It’s a matter of creating theoretical breakthroughs that can
combat the arrows of time.&lt;/p&gt;

&lt;p&gt;See, time moves forward. It always moves forward and only makes sense in one 
direction: forward. Why? Because of a number of things. Every natural 
time-dependent phenomenon has a reason for moving in the direction it does.
Sure, there are some physics equations that are essentially time-independent, 
but those are another story entirely. For the most part, we call the reason 
time tends to move forward an “arrow of time.”&lt;/p&gt;

&lt;p&gt;What is an arrow of time? Well, there are quite a few.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The quantum arrow of time has to do with measurement. After a quantum state is
measured, the state is disturbed and forced into the measured state.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The cosmological arrow of time has to do with the universe. In fact, it is the
direction of the expansion of the universe.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The causal arrow of time has to do with events. Cause must come before effect.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are some of the reasons why time must move forward. Now, here’s the thing:
No matter what you do (assuming you are using currently known physics), you will
not be able to physically reverse an arrow of time. You just cannot; however,
some scientists could not help but ponder what kind of being could reverse time.&lt;/p&gt;

&lt;p&gt;This leads us to Maxwell’s Demon.&lt;/p&gt;

&lt;p&gt;There is an arrow of time known as the thermodynamic arrow of time, which is 
essentially the second law of thermodynamics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In any cyclic process the entropy will either increase or remain the same.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It doesn’t sound menacing, but it is. Basically this means that in any thermal 
process where we can measure the entropy, things will end up more chaotic than
they started.&lt;/p&gt;

&lt;p&gt;It probably still doesn’t make any sense, so let’s pretend you had a large
rectangular box in your hands. On the right side, there are only white marbles
and on the left side, there are only black. Let’s also pretend there is a 
plastic barrier separating the two sides. If you remove the barrier, the 
marbles just around the barrier will move, but for the most part, all the white
marbles will stay on one side and all the black ones will stay on the other.&lt;/p&gt;

&lt;p&gt;But what happens if you put a lid on the box and shake it really, really hard?&lt;/p&gt;

&lt;p&gt;Well, all of a sudden the white and black marbles mix. Visually, we 
immediately notice a difference; however, we can describe this process 
thermodynamically as irreversible. It cannot be undone by shaking the box again
and again. Technically, we could remove each of the marbles and carefully place
them on their appropriate side, which would reverse the shaking… but that’s
cheating. Nature cannot do that. Nature can only shake the box and hope for the
best.&lt;/p&gt;

&lt;p&gt;And this leads us back to entropy. When all the marbles were neatly ordered on
either side of their box, there was the lowest amount of entropy in the system,
and when the marbles were all mixed up, there was the highest amount. Entropy,
then, is basically the amount of disorder in a system. This process of shaking
a box over and over again shows the second law of thermodynamics. If we take an
ordered state (one with little entropy) and shake it, it will become a 
disordered one (one with high entropy).&lt;/p&gt;

&lt;p&gt;Of course this is the case, right! We all know how things thermalize… And yet,
looking at this single arrow, scientists have thought of a way to reverse it. To
become one step closer to reversing time. How?&lt;/p&gt;

&lt;p&gt;Maxwell’s Demon.&lt;/p&gt;

&lt;p&gt;Let’s say you just shook your box of marbles and the marbles are in their most
entropic state. Now let’s say you placed a small (and magical) plastic barrier 
in the center. The barrier would only allow white marbles to move to the right
and black particles to move to the left, but would not allow the reverse.&lt;/p&gt;

&lt;p&gt;If you shake the box again with the magic barrier, the white marbles would 
magically become more likely to move to the right and the black marbles would
magically become more likely to move to the left! Super cool stuff!&lt;/p&gt;

&lt;p&gt;Now imagine that instead of black and white marbles, you have particles moving
at different speeds – particles of different temperature. In this way, we could
take a gas that is at some temperature and force all the cooler particles to one
side and all the hotter particles to another. It would be like an oven and 
fridge combined into a single device!&lt;/p&gt;

&lt;p&gt;And this is Maxwell’s Demon: A sheet of plastic that allows only certain 
particles to pass through. A simple concept with revolutionary results!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; name=&quot;code&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-the-code&quot;&gt;About the code&lt;/h2&gt;

&lt;p&gt;The code for out Maxwell’s Demon simulation can be found &lt;a href=&quot;https://github.com/leios/simuleios/tree/master/MD/demon&quot;&gt;here&lt;/a&gt;, feel free to check it out! It is a simple event-driven &lt;a href=&quot;http://introcs.cs.princeton.edu/java/assignments/collisions.html&quot;&gt;Molecular Dynamics&lt;/a&gt; (MD) simulation in 3 dimensions. What does this mean?&lt;/p&gt;

&lt;p&gt;Well, imagine that every particle in the simulation is a hard sphere of sorts – like billiard balls. If we give them all an initial kick, they’ll be moving all around and bouncing off each other, like billiard balls do. In this case, we know how the should interact with each other (it’s a super well-solved system). We basically need to take into account 2 interaction types:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Particle on particle&lt;/li&gt;
  &lt;li&gt;Particle on wall&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We assume that the chances of more than two particles interacting is negligible.&lt;/p&gt;

&lt;p&gt;Now. Let’s take a step back and think about the simulation. When most people think about MD simulations, they think about time-driven ones. Every timestep, we move the particles forward a certain amount depending on their initial velocity. If it happens that a particle overlaps with something, we deal with the interaction accordingly. This is a perfectly legitimate way of doing MD; however, because our simulation is (in a sense) simple, we can do something different and exactly solve the interactions in our system with some simple physics formulae.&lt;/p&gt;

&lt;p&gt;Basically, the algorithm creates a list of all the next interactions the particles will undergo and sorts the list by which interactions will occur first. It then moves the entire algorithm to that timestep and recalculates the necessary elements in the list, sorting them again by which interactions will occur first.&lt;/p&gt;

&lt;p&gt;In the case of a traditional event-driven MD simulation, this simulation keeps moving forward until a set timestep; however, this is not quite traditional. It’s Maxwell’s demon! Instead of just stopping the simulation at a particular timestep, we instead allow the particles to thermalize between two boxes. Once complete, we then insert the demon in the center of the box, which will sort the particles according to their velocity. If a particle’s velocity is faster than the average velocity of all the particles, it is only allowed to the right. If it is slower, it will only be allowed to pass into the left. In this way, we’vesifted the hot and cold particles into two separate boxes, recreating Maxwell’s Demon.&lt;/p&gt;

&lt;p&gt;If you are interested in visualizing the code via blender, check out &lt;a href=&quot;https://github.com/leios/simuleios/blob/master/visualization/demon.py&quot;&gt;this code&lt;/a&gt;.&lt;/p&gt;</content><author><name>James Schloss</name></author><summary type="html"></summary></entry></feed>